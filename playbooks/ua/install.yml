---

- name: Prepare UA nodes
  ansible.builtin.import_playbook: prepare.yml

- name: Configure External Data Fabric
  ansible.builtin.import_playbook: setup-df.yml

- name: Install UA
  hosts: localhost
  connection: local

  vars:
    # from hostvars
    ua_settings: "{{ hostvars[groups['ua'][0]] }}"

    # Generic params
    sshpassword_b64: "{{ ansible_ssh_pass | trim | b64encode }}"

    host_ips: "{{ groups['ua'] }}"
    no_proxy: "10.96.0.0/12,10.224.0.0/16,10.43.0.0/16,192.168.0.0/16,.external.hpe.local,localhost,.cluster.local,.svc,.default.svc,127.0.0.1,169.254.169.254,{{ host_ips | join(',') }},.{{ domain }}"

    # EZUA params
    orchestrator: "{{ groups['ua_controllers'][0] }}"
    master: "{{ groups['ua_controllers'][1] }}"
    workers: "{{ groups['ua_workers'] }}"

    ezpassword_b64: "{{ ua_settings.ua_password | trim | b64encode }}"

    auth_data:
      admin_user:
        fullname: Ezmeral Admin
        email: "ezadmin@{{ domain }}"
        username: "{{ ua_settings.ua_username }}"
        password: "{{ ua_settings.ua_password }}"

    authdata_b64: "{{ auth_data | from_yaml | trim | b64encode }}"

    registryPassword_b64: "{{ ua_settings.registryPassword | default('') | trim | b64encode }}"

    # DF settings
    df_password: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/ua_df_password') }}"
    tenant_ticket: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/maprtenantticket') }}"
    cldb_hosts: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/cldb_nodes.json') | from_json | community.general.json_query('data[*].hostname') | list }}"
    rest_hosts: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ua_settings. ua_clustername ~ '/rest_nodes.json') | from_json | community.general.json_query('data[*].hostname') | list }}"
    s3_hosts: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/s3_nodes.json') | from_json | community.general.json_query('data[*].hostname') | list }}"
    s3_access_key: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/s3_keys.json') | from_json | community.general.json_query('data[*].accesskey') | first }}"
    s3_secret_key: "{{ lookup('ansible.builtin.file', '/tmp/ezlab/' ~ ua_settings.ua_clustername ~ '/s3_keys.json') | from_json | community.general.json_query('data[*].secretkey') | first }}"

  tasks:
    - name: EZUA installer data
      ansible.builtin.copy:
        dest: "/tmp/ezlab/{{ ua_settings.ua_clustername }}/ua-install-settings.txt"
        mode: "0o644"
        content: |
          EZUA Installer UI inputs:

          --- Page 1

          Username: {{ ansible_user }}
          Credentials: Password
          Password: {{ ansible_ssh_pass }}

          Control Plane Hosts: {{ groups['ua_controllers'] | join(',') }}
          Worker Hosts: {{ groups['ua_workers'] | join(',') }}

          --- Page 2

          Installation Name: {{ ua_settings.ua_clustername }}
          Domain Name: {{ ua_settings.ua_clustername ~ '.' ~ domain }}
          vCPU: 96
          High Availability: Not checked
          Use GPU: Not checked
          Air Gap Environment: Not checked

          Registry URL: {{ ua_settings.registryUrl }}
          Registry Username: {{ ua_settings.registryUsername }}
          Registry Password: {{ ua_settings.registryPassword | default('') }}
          Registry Insecure: {{ ua_settings.registryInsecure }}

          Add certificates as needed!!!

          HTTP Proxy: {{ proxy }}
          HTTPS Proxy: {{ proxy }}
          No Proxy: {{ no_proxy }}

          --- Page 3

          Use Internal LDAP Server: check

          Username: admin
          Full Name: Ez Admin
          Email: ezadmin@{{ domain }}
          Password: {{ ua_settings.ua_password }}

          --- Page 4

          Check as needed

          --- Page 5

          Data Volumes

          CLDB Hosts: {{ cldb_hosts | join(':7222,') }}:7222
          Rest Servers: {{ rest_hosts | join('8443,') }}:8443
          Tenant Ticket: {{ tenant_ticket }}
          Username: {{ ua_settings.ua_df_username }}
          Password: {{ df_password }}
          CA Certificate: /tmp/ezlab/{{ ua_settings.ua_clustername }}/chain-ca.pem
          Mount Prefix: {{ ua_settings.ua_df_mount_path }}

          Object Store

          Object Source: Ezmeral Data Fabric S3
          End Point: https://{{ s3_hosts | first }}:9000
          Access Key: {{ s3_access_key }}
          Secret Key: {{ s3_secret_key }}
          Root Certificate: /tmp/ezlab/{{ ua_settings.ua_clustername }}/chain-ca.pem


    # - name: Copy stanza files
    #   ansible.builtin.template:
    #     src: "{{ item }}"
    #     dest: "/tmp/{{ item | replace('.j2', '') }}"
    #     mode: "644"
    #   with_items:
    #     - ua-prechecks.yml.j2
    #     - ua-ezkfInput.yml.j2
    #     - ua-hostPoolConfig.yml.j2
    #     - ua-clusterConfig.yml.j2
    #     - ua-ezkfWorkloadDeploy.yml.j2

    # - name: Write deployment script
    #   ansible.builtin.copy:
    #     content: |
    #       set -euo pipefail
    #       {{ ezfabricctl }} pc -i /tmp/ua-prechecks.yml -s /tmp/prechecksStatus.txt
    #       {{ ezfabricctl }} o init -p {{ ezfabrelease }} -i /tmp/ua-ezkfInput.yml -s /tmp/ezkf-orch-status.txt --save-kubeconfig /tmp/mgmt-kubeconfig
    #       {{ ezfabricctl }} ph i -i /tmp/ua-hostPoolConfig.yml -c /tmp/mgmt-kubeconfig -s /tmp/hostPoolConfigStatus.txt
    #       {{ ezfabricctl }} w i -i /tmp/ua-clusterConfig.yml -c /tmp/mgmt-kubeconfig -s /tmp/clusterConfigStatus.txt
    #       {{ ezfabricctl }} w g k -n {{ clustername }} -i /tmp/ua-clusterConfig.yml -c /tmp/mgmt-kubeconfig -s /tmp/clusterConfigStatus.txt --save-kubeconfig /tmp/workload-kubeconfig
    #       kubectl --kubeconfig=/tmp/workload-kubeconfig apply -f /tmp/ua-ezkfWorkloadDeploy.yml
    #     dest: /tmp/ua-install.sh
    #     mode: "755"
