---
- name: Install UA
  hosts: localhost
  connection: local

  vars:
    # Generic params
    - sshusername: "{{ settings['username'] | default('admin') }}"
    - sshpassword_b64: "{{ settings['password'] | default('Admin123.') | b64encode }}"

    - domain: "{{ settings['domain'] | default('') }}"

    - http_proxy: "{{ settings['proxy'] | default('') }}"
    - https_proxy: "{{ settings['proxy'] | default('') }}"
    - no_proxy: "10.96.0.0/12,10.224.0.0/16,10.43.0.0/16,192.168.0.0/16,.external.hpe.local,localhost,.cluster.local,.svc,.default.svc,127.0.0.1,169.254.169.254,{{ groups['all'] | join(',') }},.{{ settings['domain'] }}"

    # EZUA params
    - clustername: "{{ ezua['clustername'] | default('ezlab') }}"
    - orchestrator: "{{ hostvars[groups['ua_controllers'][0]]['ansible_host'] }}"
    - master: "{{ hostvars[groups['ua_controllers'][1]]['ansible_host'] }}"
    - workers: "{{ groups['ua_workers'] | map('extract', hostvars, ['ansible_host']) }}"

    - ezusername: "{{ ezua['username'] | default('admin') }}"
    - ezpassword_b64: "{{ ezua['password'] | default('Admin123.') | b64encode }}"

    - auth_data:
        admin_user:
          fullname: Ezmeral Admin
          email: "ezadmin@{{ settings['domain'] }}"
          username: "{{ ezusername }}"
          password: "{{ ezua['password'] | default('Admin123.') }}"

    - authdata_b64: "{{ auth_data | from_yaml | b64encode }}"

    - registryUrl: "{{ ezua['registryUrl'] | default('') }}"
    - registryInsecure: "{{ ezua['registryInsecure'] | default('false') }}"
    - registryCaFile: "{{ ezua['registryCaFile'] | default('') }}"
    - registryUsername: "{{ ezua['registryUsername'] | default('') }}"
    - registryPassword_b64: "{{ settings['registryPassword'] | default('') | b64encode }}"

  tasks:
    - name: Precheck Stanza
      ansible.builtin.template:
        src: "../../templates/ua-precheck.yml.j2"
        dest: /tmp/ua-prechecks.yaml

    # {ezfabricctl_cmd} pc -i /tmp/ua-prechecks.yaml -s /tmp/prechecksStatus.txt
    - name: Run prechecks
      ansible.builtin.shell:
        cmd: "ezfabricctl pc -i /tmp/ua-prechecks.yaml -s /tmp/prechecksStatus.txt"
      async: 360
      poll: 0
      register: command_run

    - name: Check precheck run
      ansible.builtin.async_status:
        jid: "{{ command_run.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 36
      delay: 10

    - name: EzkfInput Stanza
      ansible.builtin.template:
        src: "../../templates/ua-ezkfInput.yml.j2"
        dest: /tmp/ezkf-input.yaml

# {ezfabricctl_cmd} o init -p ./ezfab-release.tgz -i /tmp/ezkf-input.yaml -s /tmp/ezkf-orch-status.txt --save-kubeconfig /tmp/mgmt-kubeconfig

    - name: HostPoolConfig Stanza
      ansible.builtin.template:
        src: "../../templates/ua-hostPoolConfig.yml.j2"
        dest: /tmp/hostPoolConfig.yaml

# {ezfabricctl_cmd} ph i -i /tmp/hostPoolConfig.yaml -c /tmp/mgmt-kubeconfig -s /tmp/hostPoolConfigStatus.txt

    - name: ClusterConfig Stanza
      ansible.builtin.template:
        src: "../../templates/ua-clusterConfig.yml.j2"
        dest: /tmp/clusterConfig.yaml

# {ezfabricctl_cmd} w i -i /tmp/clusterConfig.yaml -c /tmp/mgmt-kubeconfig -s /tmp/clusterConfigStatus.txt

### GET CLUSTER KUBECONFIG
# ezfabricctl_cmd} w g k -n {'clustername'} -i /tmp/clusterConfig.yaml -c /tmp/mgmt-kubeconfig -s /tmp/clusterConfigStatus.txt --save-kubeconfig /tmp/workload-kubeconfig


    - name: WorkloadDeploy Stanza
      ansible.builtin.template:
        src: "../../templates/ua-ezkfWorkloadDeploy.yml.j2"
        dest: /tmp/ezkfWorkloadDeploy.yaml

# {kubectl_cmd} --kubeconfig=/tmp/workload-kubeconfig apply -f /tmp/ezkfWorkloadDeploy.yaml
